{"ast":null,"code":"var _jsxFileName = \"/Users/munigantiganesh/Desktop/react/2/src/App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n\n// import { type } from \"@testing-library/user-event/dist/type\";\nimport Alert from \"./components/Alert\";\nimport NavBar from \"./components/NavBar\";\nimport TextForm2 from \"./components/TextForm2\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [textColor, setTextColor] = useState(\"dark\"); //edi button text kosam \n  const [style, setStyle] = useState({\n    color: \"black\",\n    backgroundColor: \"white\"\n  });\n  const toogleThemeBtn = () => {\n    if (mode === \"light\" || mode === \"success\") {\n      setMode(\"dark\");\n      setTextColor(\"light\");\n      setStyle({\n        color: \"white\",\n        backgroundColor: \"#010627\"\n      });\n      showAlert(\"Dark mode has Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      setTextColor(\"dark\");\n      setStyle({\n        color: \"black\",\n        backgroundColor: \"white\"\n      });\n      showAlert(\"Light mode has Enabled\", \"success\");\n    }\n  };\n  //  mode blue\n\n  const [success, setSuccess] = useState('success');\n  const successBtn = () => {\n    if (mode === \"light\" || mode === \"dark\") {\n      setSuccess(\"light\");\n      setMode(\"success\");\n      setStyle({\n        color: \"white\",\n        backgroundColor: '#073f09'\n      });\n      showAlert(\"Green mode has Enabled\", \"success\");\n    } else {\n      setSuccess(\"success\");\n      setMode(\"light\");\n      setStyle({\n        color: \"black\",\n        backgroundColor: 'white'\n      });\n      showAlert(\"Light mode has Enabled\", \"success\");\n    }\n  };\n\n  // alert \n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      typ: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      title: \"TextUtiles\",\n      mode: mode,\n      textColor: textColor,\n      toogleThemeBtn: toogleThemeBtn,\n      success: success,\n      successBtn: successBtn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextForm2, {\n      showAlert: showAlert,\n      heading: \"Enter Any Charecter\",\n      style: style,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"CirP32G7lUrupkDz4t1Z+HHp+Dw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alert","NavBar","TextForm2","useState","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","textColor","setTextColor","style","setStyle","color","backgroundColor","toogleThemeBtn","showAlert","success","setSuccess","successBtn","alert","setAlert","message","type","msg","typ","setTimeout","children","title","fileName","_jsxFileName","lineNumber","columnNumber","heading","_c","$RefreshReg$"],"sources":["/Users/munigantiganesh/Desktop/react/2/src/App.js"],"sourcesContent":["// import './App.css';\n\n// import { type } from \"@testing-library/user-event/dist/type\";\nimport Alert from \"./components/Alert\";\nimport NavBar from \"./components/NavBar\";\nimport TextForm2 from \"./components/TextForm2\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router,\n  Switch,\n  Route,\n  Link \n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [textColor, setTextColor] = useState(\"dark\") //edi button text kosam \n  const[style, setStyle] = useState({\n    color : \"black\",\n    backgroundColor : \"white\"\n  })\n  const toogleThemeBtn = ()=>{\n    if (mode === \"light\" || mode === \"success\") {\n      setMode(\"dark\");\n      setTextColor(\"light\");\n      setStyle({\n        color : \"white\",\n        backgroundColor : \"#010627\"\n      })\n      showAlert(\"Dark mode has Enabled\",\"success\")\n    }\n    else{\n      setMode(\"light\");\n      setTextColor(\"dark\");\n      setStyle({\n        color : \"black\",\n        backgroundColor : \"white\"\n      })\n      showAlert(\"Light mode has Enabled\",\"success\")\n\n    }\n  }\n//  mode blue\n\nconst [success , setSuccess] = useState('success')\nconst successBtn = ()=>{\n  if(mode === \"light\" || mode === \"dark\"){\n    setSuccess(\"light\")\n    setMode(\"success\");\n    setStyle({\n      color : \"white\",\n      backgroundColor: '#073f09'\n    })\n    showAlert(\"Green mode has Enabled\",\"success\")\n  }\n  else{\n    setSuccess(\"success\")\n    setMode(\"light\");\n    setStyle({\n      color : \"black\",\n      backgroundColor: 'white'\n    })\n    showAlert(\"Light mode has Enabled\",\"success\")\n  }\n}\n\n\n\n\n\n// alert \nconst [alert, setAlert] = useState(null)\n\nconst showAlert = (message,type)=>{\n  setAlert({\n    msg : message,\n    typ : type\n  })\n  setTimeout(() => {\n    setAlert(null)\n  }, 1200);\n}\n\n\n  return (\n    <>\n      <NavBar title=\"TextUtiles\" mode={mode} textColor={textColor} toogleThemeBtn={toogleThemeBtn} success={success} successBtn={successBtn}/>\n      <Alert alert={alert}/>\n      <TextForm2 showAlert={showAlert} heading=\"Enter Any Charecter\" style={style} mode={mode}/>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}