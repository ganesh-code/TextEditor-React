{"ast":null,"code":"var _jsxFileName = \"/Users/munigantiganesh/Desktop/react/2/src/App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n\n// import { type } from \"@testing-library/user-event/dist/type\";\nimport Alert from \"./components/Alert\";\nimport NavBar from \"./components/NavBar\";\nimport TextForm2 from \"./components/TextForm2\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [textColor, setTextColor] = useState(\"dark\"); //edi button text kosam\n  const [style, setStyle] = useState({\n    color: \"black\",\n    backgroundColor: \"white\"\n  });\n  const toogleThemeBtn = () => {\n    if (mode === \"light\" || mode === \"success\") {\n      setMode(\"dark\");\n      setTextColor(\"light\");\n      setStyle({\n        color: \"white\",\n        backgroundColor: \"#010627\"\n      });\n      showAlert(\"Dark mode has Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      setTextColor(\"dark\");\n      setStyle({\n        color: \"black\",\n        backgroundColor: \"white\"\n      });\n      showAlert(\"Light mode has Enabled\", \"success\");\n    }\n  };\n  //  mode blue\n\n  const [success, setSuccess] = useState(\"success\");\n  const successBtn = () => {\n    if (mode === \"light\" || mode === \"dark\") {\n      setSuccess(\"light\");\n      setMode(\"success\");\n      setStyle({\n        color: \"white\",\n        backgroundColor: \"#073f09\"\n      });\n      showAlert(\"Green mode has Enabled\", \"success\");\n    } else {\n      setSuccess(\"success\");\n      setMode(\"light\");\n      setStyle({\n        color: \"black\",\n        backgroundColor: \"white\"\n      });\n      showAlert(\"Light mode has Enabled\", \"success\");\n    }\n  };\n\n  // alert\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      typ: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Rout, {\n          path: \"/about\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n        title: \"TextUtiles\",\n        mode: mode,\n        textColor: textColor,\n        toogleThemeBtn: toogleThemeBtn,\n        success: success,\n        successBtn: successBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextForm2, {\n        showAlert: showAlert,\n        heading: \"Enter Any Charecter\",\n        style: style,\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"eTxvKG2e3VtW+P/2MQY7a15YtoM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alert","NavBar","TextForm2","useState","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","textColor","setTextColor","style","setStyle","color","backgroundColor","toogleThemeBtn","showAlert","success","setSuccess","successBtn","alert","setAlert","message","type","msg","typ","setTimeout","children","Rout","path","fileName","_jsxFileName","lineNumber","columnNumber","title","heading","_c","$RefreshReg$"],"sources":["/Users/munigantiganesh/Desktop/react/2/src/App.js"],"sourcesContent":["// import './App.css';\n\n// import { type } from \"@testing-library/user-event/dist/type\";\nimport Alert from \"./components/Alert\";\nimport NavBar from \"./components/NavBar\";\nimport TextForm2 from \"./components/TextForm2\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [textColor, setTextColor] = useState(\"dark\"); //edi button text kosam\n  const [style, setStyle] = useState({\n    color: \"black\",\n    backgroundColor: \"white\",\n  });\n  const toogleThemeBtn = () => {\n    if (mode === \"light\" || mode === \"success\") {\n      setMode(\"dark\");\n      setTextColor(\"light\");\n      setStyle({\n        color: \"white\",\n        backgroundColor: \"#010627\",\n      });\n      showAlert(\"Dark mode has Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      setTextColor(\"dark\");\n      setStyle({\n        color: \"black\",\n        backgroundColor: \"white\",\n      });\n      showAlert(\"Light mode has Enabled\", \"success\");\n    }\n  };\n  //  mode blue\n\n  const [success, setSuccess] = useState(\"success\");\n  const successBtn = () => {\n    if (mode === \"light\" || mode === \"dark\") {\n      setSuccess(\"light\");\n      setMode(\"success\");\n      setStyle({\n        color: \"white\",\n        backgroundColor: \"#073f09\",\n      });\n      showAlert(\"Green mode has Enabled\", \"success\");\n    } else {\n      setSuccess(\"success\");\n      setMode(\"light\");\n      setStyle({\n        color: \"black\",\n        backgroundColor: \"white\",\n      });\n      showAlert(\"Light mode has Enabled\", \"success\");\n    }\n  };\n\n  // alert\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      typ: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  };\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Rout path=\"/about\">\n\n          </Rout>\n        </Switch>\n        <NavBar\n          title=\"TextUtiles\"\n          mode={mode}\n          textColor={textColor}\n          toogleThemeBtn={toogleThemeBtn}\n          success={success}\n          successBtn={successBtn}\n        />\n        <Alert alert={alert} />\n        <TextForm2\n          showAlert={showAlert}\n          heading=\"Enter Any Charecter\"\n          style={style}\n          mode={mode}\n        />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}